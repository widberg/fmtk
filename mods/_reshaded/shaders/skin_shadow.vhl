#ifndef	__SKIN_SHADOW_VHL__
#define	__SKIN_SHADOW_VHL__

#include "_vertex_const.h"
#include "skin.h"
#include "hlsl_shadow.h"

//---------------------------------

void Blend_Shadow(VS_Output_Blended b, float2 inUV, inout VS_Output_ShadowMap o)
{
	float3	normal		= b.normal;//*C_TWO-C_UNIT;
	float4	wPos		= b.position;
			wPos		+= ( ReAddShadowBiasNormal(normal) / GetWorldScale() );
			o.position	= ProjectVertex(wPos);
			o.uvzw.xy	= MaterialMat(inUV);
			o.uvzw.zw	= o.position.zw;
}

//---------------------------------

void vh_blend1_shadow(VS_Input_1Blend i, inout VS_Output_ShadowMap o)
{
	VS_Output_Blended	b;
	Blend1(i,i.position,b);
	Blend_Shadow(b,i.uv,o);
}

void vh_blend4_shadow(VS_Input_4Blend i, inout VS_Output_ShadowMap o)
{
	VS_Output_Blended	b;
	Blend4(i,i.position,b);
	Blend_Shadow(b,i.uv,o);
}

//---------------------------------

void vh_blend1_morph_shadow(VS_Input_1Blend i,
						float3 morph_d0 : POSITION3,
						float3 morph_d1 : POSITION4,
						float3 morph_d2 : POSITION5,
						float3 morph_d3 : POSITION6,
						inout VS_Output_ShadowMap o)
{
	float4	position	= BlendMorph( i.position, morph_d0, morph_d1, morph_d2, morph_d3 );
	vh_blend1_shadow( i, o );
}

void vh_blend4_morph_shadow(VS_Input_4Blend i,
						float3 morph_d0 : POSITION4,
						float3 morph_d1 : POSITION5,
						float3 morph_d2 : POSITION6,
						float3 morph_d3 : POSITION7,
						inout VS_Output_ShadowMap o)
{
	float4	position	= BlendMorph( i.position, morph_d0, morph_d1, morph_d2, morph_d3 );
	vh_blend4_shadow( i, o );
}

#endif