#ifndef	__SCAT_ROTSHAPE_PHL__
#define	__SCAT_ROTSHAPE_PHL__

#include "hlsl_math.h"
#include "hlsl_shadow.h"
#include "_vertex_const.h"
#include "scat_rotshape.h"

/*
	this handles a hodge-podge of stuff:
		* fog banks on Offshore Shack lake
		* distant fog banks that creep over grassy fields in distance (hardly noticeable)
		* distant massive smoke clouds on horizon (Ashtray, Firemoore Fields, etc)
		* ... and a plant (wut? exactly)

	When trucking around at green places like Offshore Shack, as you get
	further away from low-lying green places then fog will slowly appear over
	it in the distance. This imitates how distant green fields tend to get
	misty. However, it's a bit hard to see (unlike the distinct fog clouds over
	the Offshore Shack lake which are pretty easy to see).

	At places like The Ashtray, there are actually lots of "distant smoke" textures
	littering the landscape. They're massively huge, so as to give the impression
	that there's lots of smoke in the distance. As you approach them they slowly
	fade out. That's why if you start driving towards some distant smoke you will
	eventually just end up at a smoldering forest but won't see the huge smoke right
	in your face.

	Asobo originally had these processing shadows, which bogged FPS down for no visual
	improvement (save for one small plant showing shadows). I nixed the shadows on
	this, and it improved performance pretty good. Because in some places there's
	lots of distant smokes and stuff.. so they were just bogging performance for no reason.
*/

//----------------------------------------
#if ( DISTANCE_SMOKE == 1 )
//----------------------------------------

 	float4 ph_base (VS_ScatRotShapeOutput i) : COLOR
  	{
		float	night			= IS_NIGHT;
		float4	tDiffuse		= tex2D( sDiffuse, i.uv );
				tDiffuse.a		*= i.sunlight.a;
				tDiffuse.xyz	*= NIGHT_DARKEN2 ( i.sunlight.rgb,  night );
				tDiffuse.xyz	+= NIGHT_DARKEN2 ( i.inscatter.rgb, night );
		return	tDiffuse;
	}

//----------------------------------------
#else
//----------------------------------------

float4 ph_base () : COLOR	{return	0.0;}

//----------------------------------------
#endif
//----------------------------------------



#endif